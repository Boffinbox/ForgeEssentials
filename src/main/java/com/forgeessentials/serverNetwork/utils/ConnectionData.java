package com.forgeessentials.serverNetwork.utils;

import com.google.gson.annotations.Expose;

import io.netty.channel.Channel;

public class ConnectionData
{
    /**
     * Data for this local instance of FENetworkServer
     * {@link String} localServerId is the unique UUID of this FENetworkServer
     * @author maximuslotro
     */
    public static class LocalServerData
    {
        @Expose(serialize = true, deserialize = true)
        final String localServerId;

        public LocalServerData(String localServerId){
            this.localServerId = localServerId;
        }

        public String getLocalServerId()
        {
            return localServerId;
        }
    }
    /**
     * Data class for each FENetworkClient connected to this FENetworkServer
     * {@link String} remoteClientId is the unique UUID of the connected client
     * {@link String} privateKey is the unique preGenerated privateKey for this client to connect to this FENetworkServer
     * {@link String} password the password generated by the FENetworkClient
     * {@link Integer} numberTimesConnected is the number of times the client has connected
     * {@link Integer} permissionLevel is the level of permission the client has, range from 0-3
     * {@link Boolean} authenticated shows if the client is connected and authenticated
     * {@link Channel} is the current channel this client is connect from
     * @author maximuslotro
     */
    public static class ConnectedClientData
    {
        @Expose(serialize = true, deserialize = true)
        final String remoteClientId;
        @Expose(serialize = true, deserialize = true)
        String privateKey="notSet";
        @Expose(serialize = true, deserialize = true)
        String password="notSet";
        @Expose(serialize = true, deserialize = true)
        int numberTimesConnected=0;
        @Expose(serialize = true, deserialize = true)
        int permissionLevel=1;
        @Expose(serialize = false, deserialize = false)
        boolean authenticated = false;
        @Expose(serialize = false, deserialize = false)
        Channel currentChannel;
        
        public ConnectedClientData(String remoteClientId){
            this.remoteClientId = remoteClientId;
        }

        public boolean isAuthenticated()
        {
            return authenticated;
        }

        public void setAuthenticated(boolean authenticated)
        {
            this.authenticated = authenticated;
        }

        public String getRemoteClientId()
        {
            return remoteClientId;
        }

        public String getPrivateKey()
        {
            return privateKey;
        }

        public void setPrivateKey(String privateKey)
        {
            this.privateKey = privateKey;
        }

        public String getPassword()
        {
            return password;
        }

        public int getNumberTimesConnected()
        {
            return numberTimesConnected;
        }

        public int getPermissionLevel()
        {
            return permissionLevel;
        }

        public void incrementNumberTimesConnected()
        {
            this.numberTimesConnected += 1;;
        }

        public Channel getCurrentChannel()
        {
            return currentChannel;
        }

        public void setCurrentChannel(Channel currentChannel)
        {
            this.currentChannel = currentChannel;
        }
    }
    /**
     * Data for this local instance of FENetworkClient connected to a remote server
     * {@link String} localClientId is the unique UUID of this local instance of FENetworkClient
     * {@link String} remoteServerId is the unique UUID of the previously connected FENetworkServer
     * {@link String} password is the unique password of this local instance of FENetworkClient
     * {@link String} privateKey is the unique preGenerated privateKey for this client to connect to a certain FENetworkServer
     * {@link Boolean} authenticated shows if FENetworkClient authentication validation from the connected FENetworkServer
     * @author maximuslotro
     */
    public static class LocalClientData
    {
        @Expose(serialize = true, deserialize = true)
        final String localClientId;
        @Expose(serialize = true, deserialize = true)
        String remoteServerId = "notSet";
        @Expose(serialize = true, deserialize = true)
        String password = "notSet";
        @Expose(serialize = true, deserialize = true)
        String privatekey="notSet";
        @Expose(serialize = false, deserialize = false)
        boolean authenticated = false;
        
        public LocalClientData(String localClientId){
            this.localClientId = localClientId;
        }

        public String getRemoteServerId()
        {
            return remoteServerId;
        }

        public void setRemoteServerId(String remoteServerId)
        {
            this.remoteServerId = remoteServerId;
        }

        public String getLocalClientId()
        {
            return localClientId;
        }

        public String getPrivatekey()
        {
            return privatekey;
        }

        public String getPassword()
        {
            return password;
        }

        public void setPassword(String hashCode)
        {
            this.password = hashCode;
        }

        public boolean isAuthenticated()
        {
            return authenticated;
        }

        public void setAuthenticated(boolean authenticated)
        {
            this.authenticated = authenticated;
        }
        
    }
}
